## COLORSCHEME: gruvbox dark (medium)
set-option -g status "on"

# default statusbar color
#set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
set-option -g status-style 'fg=colour223,bg=#{?#{==:#{client_key_table},root},colour237,colour172}'
set-option -g status-left '[#{session_name}] #{?#{!=:#{client_key_table},root},[#{client_key_table}] ,}'
set-option -g status-left-length 0

# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1

# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-position top

set-option -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]"
set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d | %H:%M #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]#[bg=colour248,fg=colour237] #h "

set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour214,fg=colour239] #I·#[bg=colour214,fg=colour239,bold]#W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]#[bg=colour239,fg=colour223] #I·#[bg=colour239,fg=colour223]#W |#[bg=colour237,fg=colour239,noitalics]"

# vim: set ft=tmux tw=0 nowrap:

unbind C-b

## set prefix key to ctrl-space
#set-option -g prefix C-space
#set -g prefix C-space

# make tmux modal https://alexherbo2.github.io/config/tmux/make-tmux-modal/
set-option -g prefix None
bind-key -n C-Space set-option key-table prefix #\; set-option -g status-style bg=colour172,fg=colour223
bind-key Escape set-option key-table root #\; set-option -g status-style bg=colour237,fg=colour223
set-hook -g client-detached[0] 'set-option key-table root'

# shorten command delay
set -sg escape-time 1

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# vi keys for switching panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Splitting panes.
#unbind '"'
#unbind %
#bind H split-window -h -c "#{pane_current_path}" \; select-pane -L
#bind J split-window -v -c "#{pane_current_path}"
#bind K split-window -v -c "#{pane_current_path}" \; select-pane -U
#bind L split-window -h -c "#{pane_current_path}"

set-option -g detach-on-destroy off # https://unix.stackexchange.com/questions/121527/when-exiting-the-last-terminal-in-a-tmux-session-can-it-switch-to-another

bind S new-session
bind K confirm kill-session
bind C attach-session -c "#{pane_current_path}" # sets the current working directory to be the session's home directory.

set -g status-justify left

# moving between windows
bind tab last-window
bind u previous-window
bind i next-window

bind c new-window -c "#{pane_current_path}"

## vim bindings in tmux scroll mode https://stackoverflow.com/questions/51639540/tmux-scroll-mode-vim-keybindings
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'pbcopy' # macos
#bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard' # linux

set-option -g default-terminal xterm-256color
